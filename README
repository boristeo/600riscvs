1mb "L1" sram per core, banked
120 cores
5 cpus per core (1 din 3 compute 1 dout) - 600 riscvs!!!
tile + vector engines?
332 fp8 TOPS*** possibly 276 fp8 332 fp4? what type of fp8?
8gb dram

---


lightmetal - flatbuffer capture and replay of traces!!!

plan of action:
1) try to turn loopback example into lightmetal flatbuf
2) verify that it runs, find minimum amount of their library necessary (device enumeration, running flatbuf)
3) inspect flatbuf internals, find kernel, try to recreate from scratch.
4) verify that my kernel functionally identical
5) repeat 3,4 for increasingly more complex metal programs (two kernels, using accel, etc)

---

New update:

lightmetal is useless. Doesn't allow tracing anything fun.

Found new way in - llrt. Has nice, real commands for address translation, firmware loading, looks like even kernel jit?

all the api/tt-metalium/tt_* apis seem especially sane
